#!/bin/bash

#########################################################
#
# Platform: NCI Gadi HPC
# Description: Runs gatk4_mutect2_gathervcfs.sh in parallel.
# Interval VCFs are gathered into per sample, gzipped VCFs with
# tabix index file
# Usage: Adjust <project> and compute resource requests following the guide
# below, then qsub gatk4_pon_gathervcfs_run_parallel.pbs
# Job resource requirements:
# Per task requirements:
# 1 task (1 sample) requires 1 CPU, 4-20GB mem
# 8.15 min average to process one sample
# Author: Tracy Chew
# tracy.chew@sydney.edu.au
# Date last modified: 18/03/2021
#
# If you use this script towards a publication, please acknowledge the
# Sydney Informatics Hub (or co-authorship, where appropriate).
#
# Suggested acknowledgement:
# The authors acknowledge the scientific and technical assistance
# <or e.g. bioinformatics assistance of <PERSON>> of Sydney Informatics
# Hub and resources and services from the National Computational
# Infrastructure (NCI), which is supported by the Australian Government
# with access facilitated by the University of Sydney.
#
#########################################################

# 21 TN pairs:
# 48CPU, 97.16GB mem, 55.68 CPUtime, 4.25min walltime, 19.92 SU

#PBS -P <project>
#PBS -N mutect2_gathervcfs
#PBS -l walltime=00:30:00,ncpus=48,mem=192GB,wd
#PBS -q normal
#PBS -W umask=022
#PBS -l storage=scratch/<project>
#PBS -o ../Logs/mutect2_gathervcfs_samplesSet1andSet2.o
#PBS -e ../Logs/mutect2_gathervcfs_samplesSet1andSet2.e

set -e

# SCRIPT
INPUTS=./Inputs/gatk4_mutect2_gathervcfs.inputs

#########################################################
# Do not edit below this line
#########################################################

module load openmpi/4.0.2
module load nci-parallel/1.0.0
module load gatk/4.1.2.0

# NCPUs = CPUs per task
NCPUS=1

# SCRIPT
SCRIPT=./gatk4_mutect2_gathervcfs.sh

if [[ $PBS_QUEUE =~ bw-exec ]]; then CPN=28; else CPN=48; fi
M=$(( CPN / NCPUS )) #tasks per node

sed "s|^|${SCRIPT} |" ${INPUTS} > ${PBS_JOBFS}/input-file

mpirun --np $((M * PBS_NCPUS / CPN)) \
        --map-by node:PE=${NCPUS} \
        nci-parallel \
        --verbose \
        --input-file ${PBS_JOBFS}/input-file
